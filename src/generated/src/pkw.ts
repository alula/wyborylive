// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.2
//   protoc               v3.21.5
// source: src/pkw.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";

export const protobufPackage = "";

export interface FileTimestamp {
  name: string;
  timestamp: number;
}

export interface FileTimestampList {
  items: FileTimestamp[];
}

export interface CategorizedFileTimestamps {
  categoryName: string;
  files: FileTimestampList | undefined;
}

export interface Index {
  generalFiles: FileTimestamp[];
  categorizedFiles: CategorizedFileTimestamps[];
  lastUpdateTs: number;
}

export interface Konfiguracja {
  ostatniaAktualizacjaTs: number;
  generacjaDanychTs: number;
  poziomDanych: number;
  candidateFlagsBm: number;
  flagsBm: number;
  communitiesWithoutTurnout: number[];
  obkwBatchSize: number;
  cacheExpirationS: number;
  homePage: string;
  homePageLinks: Konfiguracja_HomePageLink[];
  timerStartTs: number;
  timerVotingStartTs: number;
  timerVotingEndTs: number;
  secondRound: Konfiguracja | undefined;
  videoCommunicates: Konfiguracja_HomePageLink[];
  index: Index | undefined;
}

export enum Konfiguracja_CandidateFlags {
  EMPTY_CANDIDATE_FLAG = 0,
  SHOW_LUSTRATION = 1,
  SHOW_PARTY_SUPPORT = 2,
  SHOW_AGE = 4,
  SHOW_PLACE_OF_RESIDENCE = 8,
  SHOW_EDUCATION = 16,
  SHOW_OCCUPATION = 32,
  SHOW_LIST_NUMBERS = 64,
  SHOW_SEARCH = 128,
  UNRECOGNIZED = -1,
}

export function konfiguracja_CandidateFlagsFromJSON(object: any): Konfiguracja_CandidateFlags {
  switch (object) {
    case 0:
    case "EMPTY_CANDIDATE_FLAG":
      return Konfiguracja_CandidateFlags.EMPTY_CANDIDATE_FLAG;
    case 1:
    case "SHOW_LUSTRATION":
      return Konfiguracja_CandidateFlags.SHOW_LUSTRATION;
    case 2:
    case "SHOW_PARTY_SUPPORT":
      return Konfiguracja_CandidateFlags.SHOW_PARTY_SUPPORT;
    case 4:
    case "SHOW_AGE":
      return Konfiguracja_CandidateFlags.SHOW_AGE;
    case 8:
    case "SHOW_PLACE_OF_RESIDENCE":
      return Konfiguracja_CandidateFlags.SHOW_PLACE_OF_RESIDENCE;
    case 16:
    case "SHOW_EDUCATION":
      return Konfiguracja_CandidateFlags.SHOW_EDUCATION;
    case 32:
    case "SHOW_OCCUPATION":
      return Konfiguracja_CandidateFlags.SHOW_OCCUPATION;
    case 64:
    case "SHOW_LIST_NUMBERS":
      return Konfiguracja_CandidateFlags.SHOW_LIST_NUMBERS;
    case 128:
    case "SHOW_SEARCH":
      return Konfiguracja_CandidateFlags.SHOW_SEARCH;
    case -1:
    case "UNRECOGNIZED":
    default:
      return Konfiguracja_CandidateFlags.UNRECOGNIZED;
  }
}

export function konfiguracja_CandidateFlagsToJSON(object: Konfiguracja_CandidateFlags): string {
  switch (object) {
    case Konfiguracja_CandidateFlags.EMPTY_CANDIDATE_FLAG:
      return "EMPTY_CANDIDATE_FLAG";
    case Konfiguracja_CandidateFlags.SHOW_LUSTRATION:
      return "SHOW_LUSTRATION";
    case Konfiguracja_CandidateFlags.SHOW_PARTY_SUPPORT:
      return "SHOW_PARTY_SUPPORT";
    case Konfiguracja_CandidateFlags.SHOW_AGE:
      return "SHOW_AGE";
    case Konfiguracja_CandidateFlags.SHOW_PLACE_OF_RESIDENCE:
      return "SHOW_PLACE_OF_RESIDENCE";
    case Konfiguracja_CandidateFlags.SHOW_EDUCATION:
      return "SHOW_EDUCATION";
    case Konfiguracja_CandidateFlags.SHOW_OCCUPATION:
      return "SHOW_OCCUPATION";
    case Konfiguracja_CandidateFlags.SHOW_LIST_NUMBERS:
      return "SHOW_LIST_NUMBERS";
    case Konfiguracja_CandidateFlags.SHOW_SEARCH:
      return "SHOW_SEARCH";
    case Konfiguracja_CandidateFlags.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export enum Konfiguracja_Flags {
  EMPTY_FLAG = 0,
  SHOW_OKW = 1,
  SHOW_OKW_MEMBERS = 2,
  SHOW_KW = 4,
  SHOW_OBKW = 8,
  SHOW_OBKW_MEMBERS = 16,
  SHOW_OBKW_ABROAD = 32,
  SHOW_OBKW_ABROAD_MEMBERS = 64,
  UNRECOGNIZED = -1,
}

export function konfiguracja_FlagsFromJSON(object: any): Konfiguracja_Flags {
  switch (object) {
    case 0:
    case "EMPTY_FLAG":
      return Konfiguracja_Flags.EMPTY_FLAG;
    case 1:
    case "SHOW_OKW":
      return Konfiguracja_Flags.SHOW_OKW;
    case 2:
    case "SHOW_OKW_MEMBERS":
      return Konfiguracja_Flags.SHOW_OKW_MEMBERS;
    case 4:
    case "SHOW_KW":
      return Konfiguracja_Flags.SHOW_KW;
    case 8:
    case "SHOW_OBKW":
      return Konfiguracja_Flags.SHOW_OBKW;
    case 16:
    case "SHOW_OBKW_MEMBERS":
      return Konfiguracja_Flags.SHOW_OBKW_MEMBERS;
    case 32:
    case "SHOW_OBKW_ABROAD":
      return Konfiguracja_Flags.SHOW_OBKW_ABROAD;
    case 64:
    case "SHOW_OBKW_ABROAD_MEMBERS":
      return Konfiguracja_Flags.SHOW_OBKW_ABROAD_MEMBERS;
    case -1:
    case "UNRECOGNIZED":
    default:
      return Konfiguracja_Flags.UNRECOGNIZED;
  }
}

export function konfiguracja_FlagsToJSON(object: Konfiguracja_Flags): string {
  switch (object) {
    case Konfiguracja_Flags.EMPTY_FLAG:
      return "EMPTY_FLAG";
    case Konfiguracja_Flags.SHOW_OKW:
      return "SHOW_OKW";
    case Konfiguracja_Flags.SHOW_OKW_MEMBERS:
      return "SHOW_OKW_MEMBERS";
    case Konfiguracja_Flags.SHOW_KW:
      return "SHOW_KW";
    case Konfiguracja_Flags.SHOW_OBKW:
      return "SHOW_OBKW";
    case Konfiguracja_Flags.SHOW_OBKW_MEMBERS:
      return "SHOW_OBKW_MEMBERS";
    case Konfiguracja_Flags.SHOW_OBKW_ABROAD:
      return "SHOW_OBKW_ABROAD";
    case Konfiguracja_Flags.SHOW_OBKW_ABROAD_MEMBERS:
      return "SHOW_OBKW_ABROAD_MEMBERS";
    case Konfiguracja_Flags.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface Konfiguracja_HomePageLink {
  path: string;
  label: string;
  prefix: string;
  suffix: string;
  language: string;
}

function createBaseFileTimestamp(): FileTimestamp {
  return { name: "", timestamp: 0 };
}

export const FileTimestamp: MessageFns<FileTimestamp> = {
  encode(message: FileTimestamp, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.name !== "") {
      writer.uint32(10).string(message.name);
    }
    if (message.timestamp !== 0) {
      writer.uint32(16).uint32(message.timestamp);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): FileTimestamp {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseFileTimestamp();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 10) {
            break;
          }

          message.name = reader.string();
          continue;
        }
        case 2: {
          if (tag !== 16) {
            break;
          }

          message.timestamp = reader.uint32();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): FileTimestamp {
    return {
      name: isSet(object.name) ? globalThis.String(object.name) : "",
      timestamp: isSet(object.timestamp) ? globalThis.Number(object.timestamp) : 0,
    };
  },

  toJSON(message: FileTimestamp): unknown {
    const obj: any = {};
    if (message.name !== "") {
      obj.name = message.name;
    }
    if (message.timestamp !== 0) {
      obj.timestamp = Math.round(message.timestamp);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<FileTimestamp>, I>>(base?: I): FileTimestamp {
    return FileTimestamp.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<FileTimestamp>, I>>(object: I): FileTimestamp {
    const message = createBaseFileTimestamp();
    message.name = object.name ?? "";
    message.timestamp = object.timestamp ?? 0;
    return message;
  },
};

function createBaseFileTimestampList(): FileTimestampList {
  return { items: [] };
}

export const FileTimestampList: MessageFns<FileTimestampList> = {
  encode(message: FileTimestampList, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.items) {
      FileTimestamp.encode(v!, writer.uint32(10).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): FileTimestampList {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseFileTimestampList();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 10) {
            break;
          }

          message.items.push(FileTimestamp.decode(reader, reader.uint32()));
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): FileTimestampList {
    return {
      items: globalThis.Array.isArray(object?.items) ? object.items.map((e: any) => FileTimestamp.fromJSON(e)) : [],
    };
  },

  toJSON(message: FileTimestampList): unknown {
    const obj: any = {};
    if (message.items?.length) {
      obj.items = message.items.map((e) => FileTimestamp.toJSON(e));
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<FileTimestampList>, I>>(base?: I): FileTimestampList {
    return FileTimestampList.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<FileTimestampList>, I>>(object: I): FileTimestampList {
    const message = createBaseFileTimestampList();
    message.items = object.items?.map((e) => FileTimestamp.fromPartial(e)) || [];
    return message;
  },
};

function createBaseCategorizedFileTimestamps(): CategorizedFileTimestamps {
  return { categoryName: "", files: undefined };
}

export const CategorizedFileTimestamps: MessageFns<CategorizedFileTimestamps> = {
  encode(message: CategorizedFileTimestamps, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.categoryName !== "") {
      writer.uint32(10).string(message.categoryName);
    }
    if (message.files !== undefined) {
      FileTimestampList.encode(message.files, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): CategorizedFileTimestamps {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCategorizedFileTimestamps();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 10) {
            break;
          }

          message.categoryName = reader.string();
          continue;
        }
        case 2: {
          if (tag !== 18) {
            break;
          }

          message.files = FileTimestampList.decode(reader, reader.uint32());
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CategorizedFileTimestamps {
    return {
      categoryName: isSet(object.categoryName) ? globalThis.String(object.categoryName) : "",
      files: isSet(object.files) ? FileTimestampList.fromJSON(object.files) : undefined,
    };
  },

  toJSON(message: CategorizedFileTimestamps): unknown {
    const obj: any = {};
    if (message.categoryName !== "") {
      obj.categoryName = message.categoryName;
    }
    if (message.files !== undefined) {
      obj.files = FileTimestampList.toJSON(message.files);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<CategorizedFileTimestamps>, I>>(base?: I): CategorizedFileTimestamps {
    return CategorizedFileTimestamps.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<CategorizedFileTimestamps>, I>>(object: I): CategorizedFileTimestamps {
    const message = createBaseCategorizedFileTimestamps();
    message.categoryName = object.categoryName ?? "";
    message.files = (object.files !== undefined && object.files !== null)
      ? FileTimestampList.fromPartial(object.files)
      : undefined;
    return message;
  },
};

function createBaseIndex(): Index {
  return { generalFiles: [], categorizedFiles: [], lastUpdateTs: 0 };
}

export const Index: MessageFns<Index> = {
  encode(message: Index, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.generalFiles) {
      FileTimestamp.encode(v!, writer.uint32(10).fork()).join();
    }
    for (const v of message.categorizedFiles) {
      CategorizedFileTimestamps.encode(v!, writer.uint32(18).fork()).join();
    }
    if (message.lastUpdateTs !== 0) {
      writer.uint32(32).uint32(message.lastUpdateTs);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): Index {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseIndex();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 10) {
            break;
          }

          message.generalFiles.push(FileTimestamp.decode(reader, reader.uint32()));
          continue;
        }
        case 2: {
          if (tag !== 18) {
            break;
          }

          message.categorizedFiles.push(CategorizedFileTimestamps.decode(reader, reader.uint32()));
          continue;
        }
        case 4: {
          if (tag !== 32) {
            break;
          }

          message.lastUpdateTs = reader.uint32();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Index {
    return {
      generalFiles: globalThis.Array.isArray(object?.generalFiles)
        ? object.generalFiles.map((e: any) => FileTimestamp.fromJSON(e))
        : [],
      categorizedFiles: globalThis.Array.isArray(object?.categorizedFiles)
        ? object.categorizedFiles.map((e: any) => CategorizedFileTimestamps.fromJSON(e))
        : [],
      lastUpdateTs: isSet(object.lastUpdateTs) ? globalThis.Number(object.lastUpdateTs) : 0,
    };
  },

  toJSON(message: Index): unknown {
    const obj: any = {};
    if (message.generalFiles?.length) {
      obj.generalFiles = message.generalFiles.map((e) => FileTimestamp.toJSON(e));
    }
    if (message.categorizedFiles?.length) {
      obj.categorizedFiles = message.categorizedFiles.map((e) => CategorizedFileTimestamps.toJSON(e));
    }
    if (message.lastUpdateTs !== 0) {
      obj.lastUpdateTs = Math.round(message.lastUpdateTs);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<Index>, I>>(base?: I): Index {
    return Index.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<Index>, I>>(object: I): Index {
    const message = createBaseIndex();
    message.generalFiles = object.generalFiles?.map((e) => FileTimestamp.fromPartial(e)) || [];
    message.categorizedFiles = object.categorizedFiles?.map((e) => CategorizedFileTimestamps.fromPartial(e)) || [];
    message.lastUpdateTs = object.lastUpdateTs ?? 0;
    return message;
  },
};

function createBaseKonfiguracja(): Konfiguracja {
  return {
    ostatniaAktualizacjaTs: 0,
    generacjaDanychTs: 0,
    poziomDanych: 0,
    candidateFlagsBm: 0,
    flagsBm: 0,
    communitiesWithoutTurnout: [],
    obkwBatchSize: 0,
    cacheExpirationS: 0,
    homePage: "",
    homePageLinks: [],
    timerStartTs: 0,
    timerVotingStartTs: 0,
    timerVotingEndTs: 0,
    secondRound: undefined,
    videoCommunicates: [],
    index: undefined,
  };
}

export const Konfiguracja: MessageFns<Konfiguracja> = {
  encode(message: Konfiguracja, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.ostatniaAktualizacjaTs !== 0) {
      writer.uint32(8).sint32(message.ostatniaAktualizacjaTs);
    }
    if (message.generacjaDanychTs !== 0) {
      writer.uint32(16).sint32(message.generacjaDanychTs);
    }
    if (message.poziomDanych !== 0) {
      writer.uint32(24).int32(message.poziomDanych);
    }
    if (message.candidateFlagsBm !== 0) {
      writer.uint32(32).sint32(message.candidateFlagsBm);
    }
    if (message.flagsBm !== 0) {
      writer.uint32(40).sint32(message.flagsBm);
    }
    writer.uint32(50).fork();
    for (const v of message.communitiesWithoutTurnout) {
      writer.sint32(v);
    }
    writer.join();
    if (message.obkwBatchSize !== 0) {
      writer.uint32(56).sint32(message.obkwBatchSize);
    }
    if (message.cacheExpirationS !== 0) {
      writer.uint32(64).sint32(message.cacheExpirationS);
    }
    if (message.homePage !== "") {
      writer.uint32(74).string(message.homePage);
    }
    for (const v of message.homePageLinks) {
      Konfiguracja_HomePageLink.encode(v!, writer.uint32(90).fork()).join();
    }
    if (message.timerStartTs !== 0) {
      writer.uint32(96).uint32(message.timerStartTs);
    }
    if (message.timerVotingStartTs !== 0) {
      writer.uint32(104).uint32(message.timerVotingStartTs);
    }
    if (message.timerVotingEndTs !== 0) {
      writer.uint32(112).uint32(message.timerVotingEndTs);
    }
    if (message.secondRound !== undefined) {
      Konfiguracja.encode(message.secondRound, writer.uint32(122).fork()).join();
    }
    for (const v of message.videoCommunicates) {
      Konfiguracja_HomePageLink.encode(v!, writer.uint32(130).fork()).join();
    }
    if (message.index !== undefined) {
      Index.encode(message.index, writer.uint32(138).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): Konfiguracja {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseKonfiguracja();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 8) {
            break;
          }

          message.ostatniaAktualizacjaTs = reader.sint32();
          continue;
        }
        case 2: {
          if (tag !== 16) {
            break;
          }

          message.generacjaDanychTs = reader.sint32();
          continue;
        }
        case 3: {
          if (tag !== 24) {
            break;
          }

          message.poziomDanych = reader.int32();
          continue;
        }
        case 4: {
          if (tag !== 32) {
            break;
          }

          message.candidateFlagsBm = reader.sint32();
          continue;
        }
        case 5: {
          if (tag !== 40) {
            break;
          }

          message.flagsBm = reader.sint32();
          continue;
        }
        case 6: {
          if (tag === 48) {
            message.communitiesWithoutTurnout.push(reader.sint32());

            continue;
          }

          if (tag === 50) {
            const end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) {
              message.communitiesWithoutTurnout.push(reader.sint32());
            }

            continue;
          }

          break;
        }
        case 7: {
          if (tag !== 56) {
            break;
          }

          message.obkwBatchSize = reader.sint32();
          continue;
        }
        case 8: {
          if (tag !== 64) {
            break;
          }

          message.cacheExpirationS = reader.sint32();
          continue;
        }
        case 9: {
          if (tag !== 74) {
            break;
          }

          message.homePage = reader.string();
          continue;
        }
        case 11: {
          if (tag !== 90) {
            break;
          }

          message.homePageLinks.push(Konfiguracja_HomePageLink.decode(reader, reader.uint32()));
          continue;
        }
        case 12: {
          if (tag !== 96) {
            break;
          }

          message.timerStartTs = reader.uint32();
          continue;
        }
        case 13: {
          if (tag !== 104) {
            break;
          }

          message.timerVotingStartTs = reader.uint32();
          continue;
        }
        case 14: {
          if (tag !== 112) {
            break;
          }

          message.timerVotingEndTs = reader.uint32();
          continue;
        }
        case 15: {
          if (tag !== 122) {
            break;
          }

          message.secondRound = Konfiguracja.decode(reader, reader.uint32());
          continue;
        }
        case 16: {
          if (tag !== 130) {
            break;
          }

          message.videoCommunicates.push(Konfiguracja_HomePageLink.decode(reader, reader.uint32()));
          continue;
        }
        case 17: {
          if (tag !== 138) {
            break;
          }

          message.index = Index.decode(reader, reader.uint32());
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Konfiguracja {
    return {
      ostatniaAktualizacjaTs: isSet(object.ostatniaAktualizacjaTs)
        ? globalThis.Number(object.ostatniaAktualizacjaTs)
        : 0,
      generacjaDanychTs: isSet(object.generacjaDanychTs) ? globalThis.Number(object.generacjaDanychTs) : 0,
      poziomDanych: isSet(object.poziomDanych) ? globalThis.Number(object.poziomDanych) : 0,
      candidateFlagsBm: isSet(object.candidateFlagsBm) ? globalThis.Number(object.candidateFlagsBm) : 0,
      flagsBm: isSet(object.flagsBm) ? globalThis.Number(object.flagsBm) : 0,
      communitiesWithoutTurnout: globalThis.Array.isArray(object?.communitiesWithoutTurnout)
        ? object.communitiesWithoutTurnout.map((e: any) => globalThis.Number(e))
        : [],
      obkwBatchSize: isSet(object.obkwBatchSize) ? globalThis.Number(object.obkwBatchSize) : 0,
      cacheExpirationS: isSet(object.cacheExpirationS) ? globalThis.Number(object.cacheExpirationS) : 0,
      homePage: isSet(object.homePage) ? globalThis.String(object.homePage) : "",
      homePageLinks: globalThis.Array.isArray(object?.homePageLinks)
        ? object.homePageLinks.map((e: any) => Konfiguracja_HomePageLink.fromJSON(e))
        : [],
      timerStartTs: isSet(object.timerStartTs) ? globalThis.Number(object.timerStartTs) : 0,
      timerVotingStartTs: isSet(object.timerVotingStartTs) ? globalThis.Number(object.timerVotingStartTs) : 0,
      timerVotingEndTs: isSet(object.timerVotingEndTs) ? globalThis.Number(object.timerVotingEndTs) : 0,
      secondRound: isSet(object.secondRound) ? Konfiguracja.fromJSON(object.secondRound) : undefined,
      videoCommunicates: globalThis.Array.isArray(object?.videoCommunicates)
        ? object.videoCommunicates.map((e: any) => Konfiguracja_HomePageLink.fromJSON(e))
        : [],
      index: isSet(object.index) ? Index.fromJSON(object.index) : undefined,
    };
  },

  toJSON(message: Konfiguracja): unknown {
    const obj: any = {};
    if (message.ostatniaAktualizacjaTs !== 0) {
      obj.ostatniaAktualizacjaTs = Math.round(message.ostatniaAktualizacjaTs);
    }
    if (message.generacjaDanychTs !== 0) {
      obj.generacjaDanychTs = Math.round(message.generacjaDanychTs);
    }
    if (message.poziomDanych !== 0) {
      obj.poziomDanych = Math.round(message.poziomDanych);
    }
    if (message.candidateFlagsBm !== 0) {
      obj.candidateFlagsBm = Math.round(message.candidateFlagsBm);
    }
    if (message.flagsBm !== 0) {
      obj.flagsBm = Math.round(message.flagsBm);
    }
    if (message.communitiesWithoutTurnout?.length) {
      obj.communitiesWithoutTurnout = message.communitiesWithoutTurnout.map((e) => Math.round(e));
    }
    if (message.obkwBatchSize !== 0) {
      obj.obkwBatchSize = Math.round(message.obkwBatchSize);
    }
    if (message.cacheExpirationS !== 0) {
      obj.cacheExpirationS = Math.round(message.cacheExpirationS);
    }
    if (message.homePage !== "") {
      obj.homePage = message.homePage;
    }
    if (message.homePageLinks?.length) {
      obj.homePageLinks = message.homePageLinks.map((e) => Konfiguracja_HomePageLink.toJSON(e));
    }
    if (message.timerStartTs !== 0) {
      obj.timerStartTs = Math.round(message.timerStartTs);
    }
    if (message.timerVotingStartTs !== 0) {
      obj.timerVotingStartTs = Math.round(message.timerVotingStartTs);
    }
    if (message.timerVotingEndTs !== 0) {
      obj.timerVotingEndTs = Math.round(message.timerVotingEndTs);
    }
    if (message.secondRound !== undefined) {
      obj.secondRound = Konfiguracja.toJSON(message.secondRound);
    }
    if (message.videoCommunicates?.length) {
      obj.videoCommunicates = message.videoCommunicates.map((e) => Konfiguracja_HomePageLink.toJSON(e));
    }
    if (message.index !== undefined) {
      obj.index = Index.toJSON(message.index);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<Konfiguracja>, I>>(base?: I): Konfiguracja {
    return Konfiguracja.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<Konfiguracja>, I>>(object: I): Konfiguracja {
    const message = createBaseKonfiguracja();
    message.ostatniaAktualizacjaTs = object.ostatniaAktualizacjaTs ?? 0;
    message.generacjaDanychTs = object.generacjaDanychTs ?? 0;
    message.poziomDanych = object.poziomDanych ?? 0;
    message.candidateFlagsBm = object.candidateFlagsBm ?? 0;
    message.flagsBm = object.flagsBm ?? 0;
    message.communitiesWithoutTurnout = object.communitiesWithoutTurnout?.map((e) => e) || [];
    message.obkwBatchSize = object.obkwBatchSize ?? 0;
    message.cacheExpirationS = object.cacheExpirationS ?? 0;
    message.homePage = object.homePage ?? "";
    message.homePageLinks = object.homePageLinks?.map((e) => Konfiguracja_HomePageLink.fromPartial(e)) || [];
    message.timerStartTs = object.timerStartTs ?? 0;
    message.timerVotingStartTs = object.timerVotingStartTs ?? 0;
    message.timerVotingEndTs = object.timerVotingEndTs ?? 0;
    message.secondRound = (object.secondRound !== undefined && object.secondRound !== null)
      ? Konfiguracja.fromPartial(object.secondRound)
      : undefined;
    message.videoCommunicates = object.videoCommunicates?.map((e) => Konfiguracja_HomePageLink.fromPartial(e)) || [];
    message.index = (object.index !== undefined && object.index !== null) ? Index.fromPartial(object.index) : undefined;
    return message;
  },
};

function createBaseKonfiguracja_HomePageLink(): Konfiguracja_HomePageLink {
  return { path: "", label: "", prefix: "", suffix: "", language: "" };
}

export const Konfiguracja_HomePageLink: MessageFns<Konfiguracja_HomePageLink> = {
  encode(message: Konfiguracja_HomePageLink, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.path !== "") {
      writer.uint32(10).string(message.path);
    }
    if (message.label !== "") {
      writer.uint32(18).string(message.label);
    }
    if (message.prefix !== "") {
      writer.uint32(26).string(message.prefix);
    }
    if (message.suffix !== "") {
      writer.uint32(34).string(message.suffix);
    }
    if (message.language !== "") {
      writer.uint32(42).string(message.language);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): Konfiguracja_HomePageLink {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseKonfiguracja_HomePageLink();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 10) {
            break;
          }

          message.path = reader.string();
          continue;
        }
        case 2: {
          if (tag !== 18) {
            break;
          }

          message.label = reader.string();
          continue;
        }
        case 3: {
          if (tag !== 26) {
            break;
          }

          message.prefix = reader.string();
          continue;
        }
        case 4: {
          if (tag !== 34) {
            break;
          }

          message.suffix = reader.string();
          continue;
        }
        case 5: {
          if (tag !== 42) {
            break;
          }

          message.language = reader.string();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Konfiguracja_HomePageLink {
    return {
      path: isSet(object.path) ? globalThis.String(object.path) : "",
      label: isSet(object.label) ? globalThis.String(object.label) : "",
      prefix: isSet(object.prefix) ? globalThis.String(object.prefix) : "",
      suffix: isSet(object.suffix) ? globalThis.String(object.suffix) : "",
      language: isSet(object.language) ? globalThis.String(object.language) : "",
    };
  },

  toJSON(message: Konfiguracja_HomePageLink): unknown {
    const obj: any = {};
    if (message.path !== "") {
      obj.path = message.path;
    }
    if (message.label !== "") {
      obj.label = message.label;
    }
    if (message.prefix !== "") {
      obj.prefix = message.prefix;
    }
    if (message.suffix !== "") {
      obj.suffix = message.suffix;
    }
    if (message.language !== "") {
      obj.language = message.language;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<Konfiguracja_HomePageLink>, I>>(base?: I): Konfiguracja_HomePageLink {
    return Konfiguracja_HomePageLink.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<Konfiguracja_HomePageLink>, I>>(object: I): Konfiguracja_HomePageLink {
    const message = createBaseKonfiguracja_HomePageLink();
    message.path = object.path ?? "";
    message.label = object.label ?? "";
    message.prefix = object.prefix ?? "";
    message.suffix = object.suffix ?? "";
    message.language = object.language ?? "";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
